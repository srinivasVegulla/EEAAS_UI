/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { DlDateAdapter } from './dl-date-adapter';
import { DlDateAdapterMoment } from './dl-date-adapter-moment';
import { DlDateAdapterNative } from './dl-date-adapter-native';
import { DlDateAdapterNumber } from './dl-date-adapter-number';
import { DlDateAdapterString } from './dl-date-adapter-string';
import { DL_DATE_TIME_DISPLAY_FORMAT, DL_DATE_TIME_DISPLAY_FORMAT_DEFAULT, DL_DATE_TIME_INPUT_FORMATS, DL_DATE_TIME_INPUT_FORMATS_DEFAULT, DL_DATE_TIME_MODEL_FORMAT, DL_DATE_TIME_MODEL_FORMAT_DEFAULT } from './dl-date-time-string-format';
var ɵ0 = DL_DATE_TIME_DISPLAY_FORMAT_DEFAULT, ɵ1 = DL_DATE_TIME_INPUT_FORMATS_DEFAULT, ɵ2 = DL_DATE_TIME_MODEL_FORMAT_DEFAULT;
/**
 * Import this module to supply your own `DateAdapter` provider.
 * \@internal
 *
 */
var DlDateTimeCoreModule = /** @class */ (function () {
    function DlDateTimeCoreModule() {
    }
    DlDateTimeCoreModule.decorators = [
        { type: NgModule, args: [{
                    providers: [
                        { provide: DL_DATE_TIME_DISPLAY_FORMAT, useValue: ɵ0 },
                        { provide: DL_DATE_TIME_INPUT_FORMATS, useValue: ɵ1 },
                        { provide: DL_DATE_TIME_MODEL_FORMAT, useValue: ɵ2 }
                    ]
                },] }
    ];
    return DlDateTimeCoreModule;
}());
export { DlDateTimeCoreModule };
/**
 * Import this module to store `milliseconds` in the model.
 * \@internal
 */
var DlDateTimeNumberModule = /** @class */ (function () {
    function DlDateTimeNumberModule() {
    }
    DlDateTimeNumberModule.decorators = [
        { type: NgModule, args: [{
                    imports: [DlDateTimeCoreModule],
                    providers: [
                        { provide: DlDateAdapter, useClass: DlDateAdapterNumber }
                    ],
                    exports: [DlDateTimeCoreModule]
                },] }
    ];
    return DlDateTimeNumberModule;
}());
export { DlDateTimeNumberModule };
/**
 * Import this module to store a native JavaScript `Date` in the model.
 * \@internal
 */
var DlDateTimeDateModule = /** @class */ (function () {
    function DlDateTimeDateModule() {
    }
    DlDateTimeDateModule.decorators = [
        { type: NgModule, args: [{
                    imports: [DlDateTimeCoreModule],
                    providers: [
                        { provide: DlDateAdapter, useClass: DlDateAdapterNative }
                    ],
                },] }
    ];
    return DlDateTimeDateModule;
}());
export { DlDateTimeDateModule };
/**
 * Import this module to store a `moment` in the model.
 * \@internal
 */
var DlDateTimeMomentModule = /** @class */ (function () {
    function DlDateTimeMomentModule() {
    }
    DlDateTimeMomentModule.decorators = [
        { type: NgModule, args: [{
                    imports: [DlDateTimeCoreModule],
                    providers: [
                        { provide: DlDateAdapter, useClass: DlDateAdapterMoment }
                    ],
                },] }
    ];
    return DlDateTimeMomentModule;
}());
export { DlDateTimeMomentModule };
var ɵ3 = DL_DATE_TIME_INPUT_FORMATS_DEFAULT, ɵ4 = DL_DATE_TIME_DISPLAY_FORMAT_DEFAULT;
/**
 * Import this module to store a `string` in the model.
 * \@internal
 */
var DlDateTimeStringModule = /** @class */ (function () {
    function DlDateTimeStringModule() {
    }
    DlDateTimeStringModule.decorators = [
        { type: NgModule, args: [{
                    imports: [DlDateTimeCoreModule],
                    providers: [
                        { provide: DL_DATE_TIME_INPUT_FORMATS, useValue: ɵ3 },
                        { provide: DL_DATE_TIME_MODEL_FORMAT, useValue: ɵ4 },
                        { provide: DlDateAdapter, useClass: DlDateAdapterString }
                    ],
                },] }
    ];
    return DlDateTimeStringModule;
}());
export { DlDateTimeStringModule };
export { ɵ0, ɵ1, ɵ2, ɵ3, ɵ4 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGwtZGF0ZS10aW1lLWNvcmUubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5ndWxhci1ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXIvIiwic291cmNlcyI6WyJjb3JlL2RsLWRhdGUtdGltZS1jb3JlLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFFBQVEsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUN2QyxPQUFPLEVBQUMsYUFBYSxFQUFDLE1BQU0sbUJBQW1CLENBQUM7QUFDaEQsT0FBTyxFQUFDLG1CQUFtQixFQUFDLE1BQU0sMEJBQTBCLENBQUM7QUFDN0QsT0FBTyxFQUFDLG1CQUFtQixFQUFDLE1BQU0sMEJBQTBCLENBQUM7QUFDN0QsT0FBTyxFQUFDLG1CQUFtQixFQUFDLE1BQU0sMEJBQTBCLENBQUM7QUFDN0QsT0FBTyxFQUFDLG1CQUFtQixFQUFDLE1BQU0sMEJBQTBCLENBQUM7QUFDN0QsT0FBTyxFQUNMLDJCQUEyQixFQUMzQixtQ0FBbUMsRUFDbkMsMEJBQTBCLEVBQzFCLGtDQUFrQyxFQUNsQyx5QkFBeUIsRUFDekIsaUNBQWlDLEVBQ2xDLE1BQU0sOEJBQThCLENBQUM7U0FRZSxtQ0FBbUMsT0FDcEMsa0NBQWtDLE9BQ25DLGlDQUFpQzs7Ozs7O0FBSnBGO0lBQUE7SUFRQSxDQUFDOztnQkFSQSxRQUFRLFNBQUM7b0JBQ1IsU0FBUyxFQUFFO3dCQUNULEVBQUMsT0FBTyxFQUFFLDJCQUEyQixFQUFFLFFBQVEsSUFBcUMsRUFBQzt3QkFDckYsRUFBQyxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsUUFBUSxJQUFvQyxFQUFDO3dCQUNuRixFQUFDLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxRQUFRLElBQW1DLEVBQUM7cUJBQ2xGO2lCQUNGOztJQUVELDJCQUFDO0NBQUEsQUFSRCxJQVFDO1NBRFksb0JBQW9COzs7OztBQU9qQztJQUFBO0lBUUEsQ0FBQzs7Z0JBUkEsUUFBUSxTQUFDO29CQUNSLE9BQU8sRUFBRSxDQUFDLG9CQUFvQixDQUFDO29CQUMvQixTQUFTLEVBQUU7d0JBQ1QsRUFBQyxPQUFPLEVBQUUsYUFBYSxFQUFFLFFBQVEsRUFBRSxtQkFBbUIsRUFBQztxQkFDeEQ7b0JBQ0QsT0FBTyxFQUFFLENBQUMsb0JBQW9CLENBQUM7aUJBQ2hDOztJQUVELDZCQUFDO0NBQUEsQUFSRCxJQVFDO1NBRFksc0JBQXNCOzs7OztBQU9uQztJQUFBO0lBT0EsQ0FBQzs7Z0JBUEEsUUFBUSxTQUFDO29CQUNSLE9BQU8sRUFBRSxDQUFDLG9CQUFvQixDQUFDO29CQUMvQixTQUFTLEVBQUU7d0JBQ1QsRUFBQyxPQUFPLEVBQUUsYUFBYSxFQUFFLFFBQVEsRUFBRSxtQkFBbUIsRUFBQztxQkFDeEQ7aUJBQ0Y7O0lBRUQsMkJBQUM7Q0FBQSxBQVBELElBT0M7U0FEWSxvQkFBb0I7Ozs7O0FBT2pDO0lBQUE7SUFPQSxDQUFDOztnQkFQQSxRQUFRLFNBQUM7b0JBQ1IsT0FBTyxFQUFFLENBQUMsb0JBQW9CLENBQUM7b0JBQy9CLFNBQVMsRUFBRTt3QkFDVCxFQUFDLE9BQU8sRUFBRSxhQUFhLEVBQUUsUUFBUSxFQUFFLG1CQUFtQixFQUFDO3FCQUN4RDtpQkFDRjs7SUFFRCw2QkFBQztDQUFBLEFBUEQsSUFPQztTQURZLHNCQUFzQjtTQVVpQixrQ0FBa0MsT0FDbkMsbUNBQW1DOzs7OztBQUp0RjtJQUFBO0lBU0EsQ0FBQzs7Z0JBVEEsUUFBUSxTQUFDO29CQUNSLE9BQU8sRUFBRSxDQUFDLG9CQUFvQixDQUFDO29CQUMvQixTQUFTLEVBQUU7d0JBQ1QsRUFBQyxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsUUFBUSxJQUFvQyxFQUFDO3dCQUNuRixFQUFDLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxRQUFRLElBQXFDLEVBQUM7d0JBQ25GLEVBQUMsT0FBTyxFQUFFLGFBQWEsRUFBRSxRQUFRLEVBQUUsbUJBQW1CLEVBQUM7cUJBQ3hEO2lCQUNGOztJQUVELDZCQUFDO0NBQUEsQUFURCxJQVNDO1NBRFksc0JBQXNCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtOZ01vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0RsRGF0ZUFkYXB0ZXJ9IGZyb20gJy4vZGwtZGF0ZS1hZGFwdGVyJztcbmltcG9ydCB7RGxEYXRlQWRhcHRlck1vbWVudH0gZnJvbSAnLi9kbC1kYXRlLWFkYXB0ZXItbW9tZW50JztcbmltcG9ydCB7RGxEYXRlQWRhcHRlck5hdGl2ZX0gZnJvbSAnLi9kbC1kYXRlLWFkYXB0ZXItbmF0aXZlJztcbmltcG9ydCB7RGxEYXRlQWRhcHRlck51bWJlcn0gZnJvbSAnLi9kbC1kYXRlLWFkYXB0ZXItbnVtYmVyJztcbmltcG9ydCB7RGxEYXRlQWRhcHRlclN0cmluZ30gZnJvbSAnLi9kbC1kYXRlLWFkYXB0ZXItc3RyaW5nJztcbmltcG9ydCB7XG4gIERMX0RBVEVfVElNRV9ESVNQTEFZX0ZPUk1BVCxcbiAgRExfREFURV9USU1FX0RJU1BMQVlfRk9STUFUX0RFRkFVTFQsXG4gIERMX0RBVEVfVElNRV9JTlBVVF9GT1JNQVRTLFxuICBETF9EQVRFX1RJTUVfSU5QVVRfRk9STUFUU19ERUZBVUxULFxuICBETF9EQVRFX1RJTUVfTU9ERUxfRk9STUFULFxuICBETF9EQVRFX1RJTUVfTU9ERUxfRk9STUFUX0RFRkFVTFRcbn0gZnJvbSAnLi9kbC1kYXRlLXRpbWUtc3RyaW5nLWZvcm1hdCc7XG5cbi8qKlxuICogSW1wb3J0IHRoaXMgbW9kdWxlIHRvIHN1cHBseSB5b3VyIG93biBgRGF0ZUFkYXB0ZXJgIHByb3ZpZGVyLlxuICogQGludGVybmFsXG4gKiovXG5ATmdNb2R1bGUoe1xuICBwcm92aWRlcnM6IFtcbiAgICB7cHJvdmlkZTogRExfREFURV9USU1FX0RJU1BMQVlfRk9STUFULCB1c2VWYWx1ZTogRExfREFURV9USU1FX0RJU1BMQVlfRk9STUFUX0RFRkFVTFR9LFxuICAgIHtwcm92aWRlOiBETF9EQVRFX1RJTUVfSU5QVVRfRk9STUFUUywgdXNlVmFsdWU6IERMX0RBVEVfVElNRV9JTlBVVF9GT1JNQVRTX0RFRkFVTFR9LFxuICAgIHtwcm92aWRlOiBETF9EQVRFX1RJTUVfTU9ERUxfRk9STUFULCB1c2VWYWx1ZTogRExfREFURV9USU1FX01PREVMX0ZPUk1BVF9ERUZBVUxUfVxuICBdXG59KVxuZXhwb3J0IGNsYXNzIERsRGF0ZVRpbWVDb3JlTW9kdWxlIHtcbn1cblxuLyoqXG4gKiBJbXBvcnQgdGhpcyBtb2R1bGUgdG8gc3RvcmUgYG1pbGxpc2Vjb25kc2AgaW4gdGhlIG1vZGVsLlxuICogQGludGVybmFsXG4gKi9cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtEbERhdGVUaW1lQ29yZU1vZHVsZV0sXG4gIHByb3ZpZGVyczogW1xuICAgIHtwcm92aWRlOiBEbERhdGVBZGFwdGVyLCB1c2VDbGFzczogRGxEYXRlQWRhcHRlck51bWJlcn1cbiAgXSxcbiAgZXhwb3J0czogW0RsRGF0ZVRpbWVDb3JlTW9kdWxlXVxufSlcbmV4cG9ydCBjbGFzcyBEbERhdGVUaW1lTnVtYmVyTW9kdWxlIHtcbn1cblxuLyoqXG4gKiBJbXBvcnQgdGhpcyBtb2R1bGUgdG8gc3RvcmUgYSBuYXRpdmUgSmF2YVNjcmlwdCBgRGF0ZWAgaW4gdGhlIG1vZGVsLlxuICogQGludGVybmFsXG4gKi9cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtEbERhdGVUaW1lQ29yZU1vZHVsZV0sXG4gIHByb3ZpZGVyczogW1xuICAgIHtwcm92aWRlOiBEbERhdGVBZGFwdGVyLCB1c2VDbGFzczogRGxEYXRlQWRhcHRlck5hdGl2ZX1cbiAgXSxcbn0pXG5leHBvcnQgY2xhc3MgRGxEYXRlVGltZURhdGVNb2R1bGUge1xufVxuXG4vKipcbiAqIEltcG9ydCB0aGlzIG1vZHVsZSB0byBzdG9yZSBhIGBtb21lbnRgIGluIHRoZSBtb2RlbC5cbiAqIEBpbnRlcm5hbFxuICovXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbRGxEYXRlVGltZUNvcmVNb2R1bGVdLFxuICBwcm92aWRlcnM6IFtcbiAgICB7cHJvdmlkZTogRGxEYXRlQWRhcHRlciwgdXNlQ2xhc3M6IERsRGF0ZUFkYXB0ZXJNb21lbnR9XG4gIF0sXG59KVxuZXhwb3J0IGNsYXNzIERsRGF0ZVRpbWVNb21lbnRNb2R1bGUge1xufVxuXG4vKipcbiAqIEltcG9ydCB0aGlzIG1vZHVsZSB0byBzdG9yZSBhIGBzdHJpbmdgIGluIHRoZSBtb2RlbC5cbiAqIEBpbnRlcm5hbFxuICovXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbRGxEYXRlVGltZUNvcmVNb2R1bGVdLFxuICBwcm92aWRlcnM6IFtcbiAgICB7cHJvdmlkZTogRExfREFURV9USU1FX0lOUFVUX0ZPUk1BVFMsIHVzZVZhbHVlOiBETF9EQVRFX1RJTUVfSU5QVVRfRk9STUFUU19ERUZBVUxUfSxcbiAgICB7cHJvdmlkZTogRExfREFURV9USU1FX01PREVMX0ZPUk1BVCwgdXNlVmFsdWU6IERMX0RBVEVfVElNRV9ESVNQTEFZX0ZPUk1BVF9ERUZBVUxUfSxcbiAgICB7cHJvdmlkZTogRGxEYXRlQWRhcHRlciwgdXNlQ2xhc3M6IERsRGF0ZUFkYXB0ZXJTdHJpbmd9XG4gIF0sXG59KVxuZXhwb3J0IGNsYXNzIERsRGF0ZVRpbWVTdHJpbmdNb2R1bGUge1xufVxuXG4iXX0=