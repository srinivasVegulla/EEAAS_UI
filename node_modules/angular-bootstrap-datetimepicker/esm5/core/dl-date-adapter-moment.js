/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import * as _moment from 'moment';
import { DlDateAdapter } from './dl-date-adapter';
/**
 * Work around for moment namespace conflict when used with webpack and rollup.
 * See https://github.com/dherges/ng-packagr/issues/163
 *
 * Depending on whether rollup is used, moment needs to be imported differently.
 * Since Moment.js doesn't have a default export, we normally need to import using
 * the `* as`syntax.
 *
 * rollup creates a synthetic default module and we thus need to import it using
 * the `default as` syntax.
 *
 * \@internal
 *
 * @type {?}
 */
var moment = _moment;
/**
 * Adapts `moment` to be usable as a date by date/time components that work with dates.
 *
 */
var /**
 * Adapts `moment` to be usable as a date by date/time components that work with dates.
 *
 */
DlDateAdapterMoment = /** @class */ (function (_super) {
    tslib_1.__extends(DlDateAdapterMoment, _super);
    function DlDateAdapterMoment() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Create a new instance of a `moment` type from milliseconds.
     * @param milliseconds
     *  a time value as milliseconds (local time zone)
     * @returns
     *  an instance of `moment` for the specified moment in time.
     */
    /**
     * Create a new instance of a `moment` type from milliseconds.
     * @param {?} milliseconds
     *  a time value as milliseconds (local time zone)
     * @return {?}
     *  an instance of `moment` for the specified moment in time.
     */
    DlDateAdapterMoment.prototype.fromMilliseconds = /**
     * Create a new instance of a `moment` type from milliseconds.
     * @param {?} milliseconds
     *  a time value as milliseconds (local time zone)
     * @return {?}
     *  an instance of `moment` for the specified moment in time.
     */
    function (milliseconds) {
        return moment(milliseconds);
    };
    /**
     * Returns a moment in time value as milliseconds (local time zone).
     * @param value
     *  a moment or `null`.
     * @returns
     *  a `moment.valueOf()` result for the specified `moment` or `null`
     */
    /**
     * Returns a moment in time value as milliseconds (local time zone).
     * @param {?} value
     *  a moment or `null`.
     * @return {?}
     *  a `moment.valueOf()` result for the specified `moment` or `null`
     */
    DlDateAdapterMoment.prototype.toMilliseconds = /**
     * Returns a moment in time value as milliseconds (local time zone).
     * @param {?} value
     *  a moment or `null`.
     * @return {?}
     *  a `moment.valueOf()` result for the specified `moment` or `null`
     */
    function (value) {
        return (value) ? value.valueOf() : undefined;
    };
    return DlDateAdapterMoment;
}(DlDateAdapter));
/**
 * Adapts `moment` to be usable as a date by date/time components that work with dates.
 *
 */
export { DlDateAdapterMoment };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGwtZGF0ZS1hZGFwdGVyLW1vbWVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXItYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLyIsInNvdXJjZXMiOlsiY29yZS9kbC1kYXRlLWFkYXB0ZXItbW9tZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxLQUFLLE9BQU8sTUFBTSxRQUFRLENBQUM7QUFFbEMsT0FBTyxFQUFDLGFBQWEsRUFBQyxNQUFNLG1CQUFtQixDQUFDOzs7Ozs7Ozs7Ozs7Ozs7O0lBZTFDLE1BQU0sR0FBRyxPQUFPOzs7OztBQUt0Qjs7Ozs7SUFBeUMsK0NBQXFCO0lBQTlEOztJQXVCQSxDQUFDO0lBckJDOzs7Ozs7T0FNRzs7Ozs7Ozs7SUFDSCw4Q0FBZ0I7Ozs7Ozs7SUFBaEIsVUFBaUIsWUFBb0I7UUFDbkMsT0FBTyxNQUFNLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDOUIsQ0FBQztJQUVEOzs7Ozs7T0FNRzs7Ozs7Ozs7SUFDSCw0Q0FBYzs7Ozs7OztJQUFkLFVBQWUsS0FBb0I7UUFDakMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQztJQUMvQyxDQUFDO0lBQ0gsMEJBQUM7QUFBRCxDQUFDLEFBdkJELENBQXlDLGFBQWEsR0F1QnJEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgX21vbWVudCBmcm9tICdtb21lbnQnO1xuaW1wb3J0IHtNb21lbnR9IGZyb20gJ21vbWVudCc7XG5pbXBvcnQge0RsRGF0ZUFkYXB0ZXJ9IGZyb20gJy4vZGwtZGF0ZS1hZGFwdGVyJztcblxuLyoqXG4gKiBXb3JrIGFyb3VuZCBmb3IgbW9tZW50IG5hbWVzcGFjZSBjb25mbGljdCB3aGVuIHVzZWQgd2l0aCB3ZWJwYWNrIGFuZCByb2xsdXAuXG4gKiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2RoZXJnZXMvbmctcGFja2Fnci9pc3N1ZXMvMTYzXG4gKlxuICogRGVwZW5kaW5nIG9uIHdoZXRoZXIgcm9sbHVwIGlzIHVzZWQsIG1vbWVudCBuZWVkcyB0byBiZSBpbXBvcnRlZCBkaWZmZXJlbnRseS5cbiAqIFNpbmNlIE1vbWVudC5qcyBkb2Vzbid0IGhhdmUgYSBkZWZhdWx0IGV4cG9ydCwgd2Ugbm9ybWFsbHkgbmVlZCB0byBpbXBvcnQgdXNpbmdcbiAqIHRoZSBgKiBhc2BzeW50YXguXG4gKlxuICogcm9sbHVwIGNyZWF0ZXMgYSBzeW50aGV0aWMgZGVmYXVsdCBtb2R1bGUgYW5kIHdlIHRodXMgbmVlZCB0byBpbXBvcnQgaXQgdXNpbmdcbiAqIHRoZSBgZGVmYXVsdCBhc2Agc3ludGF4LlxuICpcbiAqIEBpbnRlcm5hbFxuICoqL1xuY29uc3QgbW9tZW50ID0gX21vbWVudDtcblxuLyoqXG4gKiBBZGFwdHMgYG1vbWVudGAgdG8gYmUgdXNhYmxlIGFzIGEgZGF0ZSBieSBkYXRlL3RpbWUgY29tcG9uZW50cyB0aGF0IHdvcmsgd2l0aCBkYXRlcy5cbiAqKi9cbmV4cG9ydCBjbGFzcyBEbERhdGVBZGFwdGVyTW9tZW50IGV4dGVuZHMgRGxEYXRlQWRhcHRlcjxNb21lbnQ+IHtcblxuICAvKipcbiAgICogQ3JlYXRlIGEgbmV3IGluc3RhbmNlIG9mIGEgYG1vbWVudGAgdHlwZSBmcm9tIG1pbGxpc2Vjb25kcy5cbiAgICogQHBhcmFtIG1pbGxpc2Vjb25kc1xuICAgKiAgYSB0aW1lIHZhbHVlIGFzIG1pbGxpc2Vjb25kcyAobG9jYWwgdGltZSB6b25lKVxuICAgKiBAcmV0dXJuc1xuICAgKiAgYW4gaW5zdGFuY2Ugb2YgYG1vbWVudGAgZm9yIHRoZSBzcGVjaWZpZWQgbW9tZW50IGluIHRpbWUuXG4gICAqL1xuICBmcm9tTWlsbGlzZWNvbmRzKG1pbGxpc2Vjb25kczogbnVtYmVyKTogTW9tZW50IHtcbiAgICByZXR1cm4gbW9tZW50KG1pbGxpc2Vjb25kcyk7XG4gIH1cblxuICAvKipcbiAgICogUmV0dXJucyBhIG1vbWVudCBpbiB0aW1lIHZhbHVlIGFzIG1pbGxpc2Vjb25kcyAobG9jYWwgdGltZSB6b25lKS5cbiAgICogQHBhcmFtIHZhbHVlXG4gICAqICBhIG1vbWVudCBvciBgbnVsbGAuXG4gICAqIEByZXR1cm5zXG4gICAqICBhIGBtb21lbnQudmFsdWVPZigpYCByZXN1bHQgZm9yIHRoZSBzcGVjaWZpZWQgYG1vbWVudGAgb3IgYG51bGxgXG4gICAqL1xuICB0b01pbGxpc2Vjb25kcyh2YWx1ZTogTW9tZW50IHwgbnVsbCk6IG51bWJlciB8IG51bGwge1xuICAgIHJldHVybiAodmFsdWUpID8gdmFsdWUudmFsdWVPZigpIDogdW5kZWZpbmVkO1xuICB9XG59XG4iXX0=