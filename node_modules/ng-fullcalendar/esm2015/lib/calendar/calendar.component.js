/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, Input, EventEmitter, Output } from '@angular/core';
import { Calendar } from '@fullcalendar/core';
export class CalendarComponent {
    /**
     * @param {?} element
     */
    constructor(element) {
        this.element = element;
        this.initialized = new EventEmitter();
        this.eventClick = new EventEmitter();
        this.eventMouseEnter = new EventEmitter();
        this.eventMouseLeave = new EventEmitter();
        this.eventDragStart = new EventEmitter();
        this.eventDragStop = new EventEmitter();
        this.eventDrop = new EventEmitter();
        this.eventResizeStart = new EventEmitter();
        this.eventResizeStop = new EventEmitter();
        this.eventLeave = new EventEmitter();
        this.eventResize = new EventEmitter();
        this.eventResizableFromStart = new EventEmitter();
        this.allDayMaintainDuration = new EventEmitter();
        this.dragScroll = new EventEmitter();
        this.eventConstraint = new EventEmitter();
        this.eventReceive = new EventEmitter();
        this.drop = new EventEmitter();
        this.select = new EventEmitter();
        this.dateClick = new EventEmitter();
        this.clickButton = new EventEmitter();
        this.fullcalendarEvents = [
            'eventClick',
            'eventMouseEnter',
            'eventMouseLeave',
            'eventDragStart',
            'eventDragStop',
            'eventDrop',
            'eventResizeStart',
            'eventResizeStop',
            'eventLeave',
            'eventResize',
            'eventResizableFromStart',
            'allDayMaintainDuration',
            'dragScroll',
            'eventReceive',
            'drop',
            'select',
            'dateClick'
        ];
        this._reRender = true;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set eventsModel(value) {
        this._eventsModel = value;
        if (this._reRender) {
            setTimeout((/**
             * @return {?}
             */
            () => {
                this.renderEvents(value);
            }), 50);
        }
        else {
            this._reRender = true;
        }
    }
    /**
     * @return {?}
     */
    ngOnInit() { }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        this.updateOptions();
        this.calendar = new Calendar(this.element.nativeElement, this.options);
        this.calendar.render();
        this.initialized.emit();
        this.element.nativeElement.addEventListener('click', (/**
         * @param {?} ev
         * @return {?}
         */
        ev => {
            /** @type {?} */
            const closest = ev.target.closest('button');
            if (closest) {
                /** @type {?} */
                const classnames = ev.srcElement.className.split(' ');
                classnames.forEach((/**
                 * @param {?} name
                 * @return {?}
                 */
                name => {
                    if (name.indexOf('button') === name.length - 6) {
                        name = name.replace(/fc|button|-/g, '');
                        if (name != '') {
                            this.buttonEventDispatch(name);
                        }
                    }
                    else if (name.indexOf('chevron')) {
                        name = name.replace(/fc|icon|chevron|-/g, '');
                        switch (name) {
                            case 'right':
                                this.buttonEventDispatch('next');
                                break;
                            case 'left':
                                this.buttonEventDispatch('prev');
                                break;
                            default:
                                break;
                        }
                    }
                }));
            }
        }));
    }
    /**
     * @private
     * @param {?} buttonType
     * @return {?}
     */
    buttonEventDispatch(buttonType) {
        /** @type {?} */
        const currentDetail = {
            buttonType: buttonType,
            data: this.calendar.getDate()
        };
        this.clickButton.emit(currentDetail);
    }
    /**
     * @private
     * @return {?}
     */
    updateOptions() {
        this.fullcalendarEvents.forEach((/**
         * @param {?} element
         * @return {?}
         */
        element => {
            if (!this.options[element]) {
                this.options[element] = (/**
                 * @param {?} info
                 * @return {?}
                 */
                info => {
                    this[element].emit(info);
                });
            }
        }));
    }
    /**
     * @private
     * @param {?} events
     * @return {?}
     */
    renderEvents(events) {
        // https://fullcalendar.io/docs/Calendar-batchRendering
        if (events && events.length) {
            this.calendar.batchRendering((/**
             * @return {?}
             */
            () => {
                this.calendar.removeAllEvents();
                events.forEach((/**
                 * @param {?} ev
                 * @return {?}
                 */
                ev => {
                    this.calendar.addEvent(ev);
                }));
            }));
            this.calendar.rerenderEvents();
        }
    }
}
CalendarComponent.decorators = [
    { type: Component, args: [{
                selector: 'ng-fullcalendar',
                template: ``
            }] }
];
/** @nocollapse */
CalendarComponent.ctorParameters = () => [
    { type: ElementRef }
];
CalendarComponent.propDecorators = {
    options: [{ type: Input }],
    initialized: [{ type: Output }],
    eventClick: [{ type: Output }],
    eventMouseEnter: [{ type: Output }],
    eventMouseLeave: [{ type: Output }],
    eventDragStart: [{ type: Output }],
    eventDragStop: [{ type: Output }],
    eventDrop: [{ type: Output }],
    eventResizeStart: [{ type: Output }],
    eventResizeStop: [{ type: Output }],
    eventLeave: [{ type: Output }],
    eventResize: [{ type: Output }],
    eventResizableFromStart: [{ type: Output }],
    allDayMaintainDuration: [{ type: Output }],
    dragScroll: [{ type: Output }],
    eventConstraint: [{ type: Output }],
    eventReceive: [{ type: Output }],
    drop: [{ type: Output }],
    select: [{ type: Output }],
    dateClick: [{ type: Output }],
    clickButton: [{ type: Output }],
    eventsModel: [{ type: Input, args: ['eventsModel',] }]
};
if (false) {
    /** @type {?} */
    CalendarComponent.prototype.options;
    /** @type {?} */
    CalendarComponent.prototype.initialized;
    /** @type {?} */
    CalendarComponent.prototype.eventClick;
    /** @type {?} */
    CalendarComponent.prototype.eventMouseEnter;
    /** @type {?} */
    CalendarComponent.prototype.eventMouseLeave;
    /** @type {?} */
    CalendarComponent.prototype.eventDragStart;
    /** @type {?} */
    CalendarComponent.prototype.eventDragStop;
    /** @type {?} */
    CalendarComponent.prototype.eventDrop;
    /** @type {?} */
    CalendarComponent.prototype.eventResizeStart;
    /** @type {?} */
    CalendarComponent.prototype.eventResizeStop;
    /** @type {?} */
    CalendarComponent.prototype.eventLeave;
    /** @type {?} */
    CalendarComponent.prototype.eventResize;
    /** @type {?} */
    CalendarComponent.prototype.eventResizableFromStart;
    /** @type {?} */
    CalendarComponent.prototype.allDayMaintainDuration;
    /** @type {?} */
    CalendarComponent.prototype.dragScroll;
    /** @type {?} */
    CalendarComponent.prototype.eventConstraint;
    /** @type {?} */
    CalendarComponent.prototype.eventReceive;
    /** @type {?} */
    CalendarComponent.prototype.drop;
    /** @type {?} */
    CalendarComponent.prototype.select;
    /** @type {?} */
    CalendarComponent.prototype.dateClick;
    /** @type {?} */
    CalendarComponent.prototype.clickButton;
    /**
     * @type {?}
     * @private
     */
    CalendarComponent.prototype.fullcalendarEvents;
    /** @type {?} */
    CalendarComponent.prototype.calendar;
    /**
     * @type {?}
     * @private
     */
    CalendarComponent.prototype._eventsModel;
    /**
     * @type {?}
     * @private
     */
    CalendarComponent.prototype._reRender;
    /**
     * @type {?}
     * @private
     */
    CalendarComponent.prototype.element;
}
//# sourceMappingURL=data:application/json;base64,