{"version":3,"sources":["ng://ng-fullcalendar/lib/calendar/calendar.component.ts","ng://ng-fullcalendar/lib/ng-fullcalendar.module.ts"],"names":["CalendarComponent","element","this","initialized","EventEmitter","eventClick","eventMouseEnter","eventMouseLeave","eventDragStart","eventDragStop","eventDrop","eventResizeStart","eventResizeStop","eventLeave","eventResize","eventResizableFromStart","allDayMaintainDuration","dragScroll","eventConstraint","eventReceive","drop","select","dateClick","clickButton","fullcalendarEvents","_reRender","Object","defineProperty","prototype","value","_this","_eventsModel","setTimeout","renderEvents","ngOnInit","ngAfterViewInit","updateOptions","calendar","Calendar","nativeElement","options","render","emit","addEventListener","ev","target","closest","srcElement","className","split","forEach","name","indexOf","length","replace","buttonEventDispatch","buttonType","currentDetail","data","getDate","info","events","batchRendering","removeAllEvents","addEvent","rerenderEvents","Component","args","selector","template","ElementRef","Input","Output","FullCalendarModule","NgModule","declarations","imports","exports"],"mappings":"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","sourcesContent":["import {\r\n  Component,\r\n  OnInit,\r\n  ElementRef,\r\n  Input,\r\n  AfterViewInit,\r\n  EventEmitter,\r\n  Output\r\n} from '@angular/core';\r\nimport { Calendar, OptionsInput } from '@fullcalendar/core';\r\n\r\n@Component({\r\n  selector: 'ng-fullcalendar',\r\n  template: ``\r\n})\r\nexport class CalendarComponent implements OnInit, AfterViewInit {\r\n  // Options object, see fullcalendar docs\r\n  @Input() options: OptionsInput;\r\n  @Output() initialized = new EventEmitter<any>();\r\n\r\n  @Output() eventClick = new EventEmitter<any>();\r\n  @Output() eventMouseEnter = new EventEmitter<any>();\r\n  @Output() eventMouseLeave = new EventEmitter<any>();\r\n  @Output() eventDragStart = new EventEmitter<any>();\r\n  @Output() eventDragStop = new EventEmitter<any>();\r\n  @Output() eventDrop = new EventEmitter<any>();\r\n  @Output() eventResizeStart = new EventEmitter<any>();\r\n  @Output() eventResizeStop = new EventEmitter<any>();\r\n  @Output() eventLeave = new EventEmitter<any>();\r\n  @Output() eventResize = new EventEmitter<any>();\r\n  @Output() eventResizableFromStart = new EventEmitter<any>();\r\n  @Output() allDayMaintainDuration = new EventEmitter<any>();\r\n  @Output() dragScroll = new EventEmitter<any>();\r\n  @Output() eventConstraint = new EventEmitter<any>();\r\n  @Output() eventReceive = new EventEmitter<any>();\r\n  @Output() drop = new EventEmitter<any>();\r\n  @Output() select = new EventEmitter<any>();\r\n  @Output() dateClick = new EventEmitter<any>();\r\n  @Output() clickButton = new EventEmitter<any>();\r\n\r\n  private fullcalendarEvents = [\r\n    'eventClick',\r\n    'eventMouseEnter',\r\n    'eventMouseLeave',\r\n    'eventDragStart',\r\n    'eventDragStop',\r\n    'eventDrop',\r\n    'eventResizeStart',\r\n    'eventResizeStop',\r\n    'eventLeave',\r\n    'eventResize',\r\n    'eventResizableFromStart',\r\n    'allDayMaintainDuration',\r\n    'dragScroll',\r\n    'eventReceive',\r\n    'drop',\r\n    'select',\r\n    'dateClick'\r\n  ];\r\n  calendar: Calendar;\r\n  private _eventsModel: any[];\r\n  private _reRender = true;\r\n  @Input('eventsModel')\r\n  set eventsModel(value: any[]) {\r\n    this._eventsModel = value;\r\n    if (this._reRender) {\r\n      setTimeout(() => {\r\n        this.renderEvents(value);\r\n      }, 50);\r\n    } else {\r\n      this._reRender = true;\r\n    }\r\n  }\r\n\r\n  constructor(private element: ElementRef) {}\r\n  ngOnInit() {}\r\n  ngAfterViewInit() {\r\n    this.updateOptions();\r\n    this.calendar = new Calendar(this.element.nativeElement, this.options);\r\n    this.calendar.render();\r\n    this.initialized.emit();\r\n    this.element.nativeElement.addEventListener('click', ev => {\r\n      const closest = ev.target.closest('button');\r\n      if (closest) {\r\n        const classnames = ev.srcElement.className.split(' ');\r\n        classnames.forEach(name => {\r\n          if (name.indexOf('button') === name.length - 6) {\r\n            name = name.replace(/fc|button|-/g, '');\r\n            if (name != '') {\r\n              this.buttonEventDispatch(name);\r\n            }\r\n          } else if (name.indexOf('chevron')) {\r\n            name = name.replace(/fc|icon|chevron|-/g, '');\r\n            switch (name) {\r\n              case 'right':\r\n                this.buttonEventDispatch('next');\r\n                break;\r\n              case 'left':\r\n                this.buttonEventDispatch('prev');\r\n                break;\r\n              default:\r\n                break;\r\n            }\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n  private buttonEventDispatch(buttonType: string) {\r\n    const currentDetail: any = {\r\n      buttonType: buttonType,\r\n      data: this.calendar.getDate()\r\n    };\r\n    this.clickButton.emit(currentDetail);\r\n  }\r\n\r\n  private updateOptions() {\r\n    this.fullcalendarEvents.forEach(element => {\r\n      if (!this.options[element]) {\r\n        this.options[element] = info => {\r\n          this[element].emit(info);\r\n        };\r\n      }\r\n    });\r\n  }\r\n  private renderEvents(events: any[]) {\r\n    // https://fullcalendar.io/docs/Calendar-batchRendering\r\n    if (events && events.length) {\r\n      this.calendar.batchRendering(() => {\r\n        this.calendar.removeAllEvents();\r\n        events.forEach(ev => {\r\n          this.calendar.addEvent(ev);\r\n        });\r\n      });\r\n      this.calendar.rerenderEvents();\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CalendarComponent } from './calendar/calendar.component';\r\n\r\n@NgModule({\r\n  declarations: [CalendarComponent],\r\n  imports: [\r\n  ],\r\n  exports: [CalendarComponent]\r\n})\r\nexport class FullCalendarModule { }\r\n"]}